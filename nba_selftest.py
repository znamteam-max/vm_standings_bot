import sys, time, traceback
from requests.exceptions import HTTPError, ReadTimeout, ConnectionError as ReqConnError

print("üîß Importing nba_api ...", flush=True)
try:
    from nba_api.stats.endpoints import leaguestandingsv3
except Exception as e:
    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å nba_api:", e)
    sys.exit(1)

def fetch_once():
    df = leaguestandingsv3.LeagueStandingsV3().standings.get_data_frame()
    # sanity-–≤—ã–≤–æ–¥
    cols = ["TeamTricode","Conference","ConferenceRank","W","L","W_PCT"]
    print("‚úÖ Rows:", len(df))
    print(df[cols].head(10).to_string(index=False))

# —Ä–µ—Ç—Ä–∞–∏ —Å –ø–æ–Ω—è—Ç–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ (–µ—Å–ª–∏ CDN/NBA –∫–∞–ø—Ä–∏–∑–Ω–∏—á–∞–µ—Ç)
last_err = None
for i in range(1, 5):
    try:
        print(f"‚è© –ü–æ–ø—ã—Ç–∫–∞ {i}/4 ...", flush=True)
        fetch_once()
        print("‚úÖ NBA fetch OK")
        sys.exit(0)
    except (HTTPError, ReadTimeout, ReqConnError) as e:
        last_err = e
        print(f"‚ö†Ô∏è  C–µ—Ç–µ–≤–æ–π —Å–±–æ–π –æ—Ç NBA (attempt {i}/4): {e}")
        time.sleep(3)
    except Exception as e:
        last_err = e
        print("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ standings:")
        traceback.print_exc()
        break

print(f"‚ùå –ò—Ç–æ–≥: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å standings: {last_err}")
sys.exit(1)
